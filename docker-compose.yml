
version: "3.8"

services:
  backend:
    image: ft_transcendence-backend
    restart: unless-stopped  # ‚úÖ Automatically restart if it crashes
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    ports:
      - "3000:3000"
      - "5555:5555"  # ‚úÖ To expose Prisma Studio
    env_file:
      - backend/.env
    volumes:
      - ./backend/database:/database  # ‚úÖ Ensures SQLite DB persists
      - ./backend/prisma:/app/prisma  # ‚úÖ Ensures Prisma schema is accessible
      - ./backend/node_modules:/app/node_modules  # ‚úÖ Prevents redundant reinstallations
    depends_on:
      - database
    command: ["sh", "-c", "npx prisma generate && node dist/server.js"]

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - backend
    command: ["npx", "serve", "-s", "dist", "-l", "5000"]

  database:
    image: alpine  # ‚úÖ Minimal base image
    command: sh -c "mkdir -p /database && touch /database/data.db"
    volumes:
      - ./backend/database:/database  # ‚úÖ Ensures the database is shared with backend

volumes:
  sqlite_data:

# services:

#   backend:
#     image: ft_transcendence-backend
#     restart: unless-stopped  # Automatically restart on failure
#     build:
#       context: .
#       dockerfile: docker/backend.Dockerfile
#     ports:
#       - "3000:3000"
#       - "5555:5555"  # To expose Prisma Studio
#     env_file:
#       - backend/.env
#     volumes:
#       - ./backend/database:/database
#       # - ./database:/app/database  # ‚úÖ Ensures SQLite DB is properly mounted
#       - ./backend/prisma:/app/prisma  # ‚úÖ Ensures Prisma schema is accessible
#       - ./backend/node_modules:/app/node_modules  # ‚úÖ Prevents reinstallation of node_modules

#     depends_on:
#       - database
#     # command: ["sh", "-c", "npx prisma generate && npx prisma migrate deploy && node dist/server.js"]
#     command: ["sh", "-c", "npx prisma generate && node dist/server.js"]


#   frontend:
#     build:
#       context: .
#       dockerfile: docker/frontend.Dockerfile
#     ports:
#       - "5000:5000"
#     depends_on:
#       - backend
#     command: ["npx", "serve", "-s", "dist", "-l", "5000"]
  
#   database:
#     image: alpine  # ‚úÖ Minimal image to ensure volume exists
#     command: sh -c "mkdir -p /database && touch /database/data.db"
#     volumes:
#       - ./database:/database

# volumes:
#   sqlite_data:

    # command: >
    #   sh -c "
    #     npx prisma generate &&
    #     npx prisma migrate deploy &&
    #     node dist/server.js
    #   "

# services:
#   backend:
#     networks:
#       - ft_transcendence_network

#   frontend:
#     networks:
#       - ft_transcendence_network

# networks:
#   ft_transcendence_network:
#     driver: bridge


  # game:
  #   build:
  #     context: .
  #     dockerfile: docker/game.Dockerfile
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - backend

# services:
#   backend:
#     build:
#       context: ..
#       dockerfile: docker/Dockerfile.backend
#     ports:
#       - "3000:3000"
#     volumes:
#       - ../backend:/app
#     command: ["sh", "-c", "npx prisma migrate deploy && node server.js"]
#     environment:
#       - NODE_ENV=development
#       - DATABASE_URL=file:/app/database.sqlite
#       - JWT_SECRET=supersecret  # üîê Change this for production!
