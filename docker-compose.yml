
version: "3.8"

networks:
  ft_transcendence-network:
    driver: bridge

volumes:
  sqlite_data:

services:

  backend:
    container_name: ft_transcendence-backend
    build:
      context: ./backend
      dockerfile: backend.Dockerfile
    # env_file:
      # - backend/.env
    environment:
      DATABASE_URL: "file:/app/database/database.sqlite"
      JWT_SECRET: ${JWT_SECRET:-default_secret}
      NODE_ENV: ${NODE_ENV:-development}
    ports:
      - "3000:3000"
    volumes:
      - ./backend/certs:/app/certs
    networks:
      - ft_transcendence-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "/app/healthcheck.sh"]
      interval: 10s
      retries: 5
  
  frontend:
    container_name: ft_transcendence-frontend
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    networks:
      - ft_transcendence-network
    restart: unless-stopped
    depends_on:
      - backend
      # backend:
      #   condition: service_healthy  # Wait until backend is ready

  # game:
  #   container_name: ft_transcendence-game
  #   build:
  #     context: ./game
  #     dockerfile: game.Dockerfile
  #   networks:
  #     - ft_transcendence-network
  #   restart: unless-stopped
  #   depends_on:
  #     - backend
  #   ports:
  #     - "8082:8082"

  nginx:
    container_name: ft_transcendence-nginx
    build:
      context: ./nginx
      dockerfile: nginx.Dockerfile
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./backend/certs:/etc/nginx/ssl
    networks:
      - ft_transcendence-network
    depends_on:
      - backend
      - frontend
      # - game
    restart: unless-stopped
