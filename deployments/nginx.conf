
server {
    listen 80;
	listen 443 ssl;

	ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    location /api/ {
        proxy_pass http://ft_transcendence-backend:3000/;
        # proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "Upgrade";
    }

    # WebSocket support
    # location /ws/ {
    #     proxy_pass http://ft_transcendence-backend:3000/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "Upgrade";
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # }

    error_page 404 /index.html;

    # Enable gzip compression
    # gzip on;
    # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    # gzip_vary on;
}

# # Version mini
# server {
#     listen 80;

#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri /index.html;
#     }

#     location /api/ {
#         proxy_pass http://ft_transcendence-backend:3000/;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }

#     error_page 404 /index.html;
# }


# # Version de jcoquet, kio ?
# http {
# 	server {
# 		listen 80;

# 		server_name $DOMAIN_NAME;

# 		# Redirect HTTP requests to HTTPS
# 		return 301 https://$host$request_uri;
# 	}

# 	# HTTPS
# 	server {
# 		listen 443 ssl;

# 		server_name $DOMAIN_NAME;

# 		ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt
# 		 ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

#         # SSL settings
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:CHACHA20-POLY1305-SHA256';
#         ssl_prefer_server_ciphers on;


#         # Proxy requests to the front-end (Vite)
#         location / {
#             proxy_pass http://frontend:3000/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;

#             # WebSocket support for HMR (Hot Module Replacement)
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#         }

#         # Proxy requests to the back-end (Django)
#         location /api/ {
#             proxy_pass http://backend:8000/;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }

# find a midpoint that fits the project between the previous simple one and handling the project requirements...

# worker_processes auto;
# events {
#     worker_connections 1024;
# }

# http {
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;

#     sendfile on;
#     tcp_nopush on;
#     tcp_nodelay on;
#     keepalive_timeout 65;
#     types_hash_max_size 2048;

#     server {
#         listen 80;
#         server_name _;

#         # Serve the frontend
#         location / {
#             root /usr/share/nginx/html;
#             index index.html;
#             try_files $uri /index.html;
#         }

#         # API requests forwarded to the backend
#         location /api/ {
#             proxy_pass http://ft_transcendence-backend:3000/;
#             proxy_http_version 1.1;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "Upgrade";
#         }

#         # WebSocket support (for real-time communication if needed)
#         location /ws/ {
#             proxy_pass http://ft_transcendence-backend:3000/;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "Upgrade";
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         }

#         # Handle 404 errors properly
#         error_page 404 /index.html;
#         location = /index.html {
#             root /usr/share/nginx/html;
#         }

#         # Compression to optimize performance
#         gzip on;
#         gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
#         gzip_vary on;
#     }
# }
